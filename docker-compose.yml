version: '3'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: ${REGISTRY:-local}/web-wizards-frontend:${TAG:-dev}
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VITE_API_URL=${BACKEND_URL:-http://localhost:8000/api}
      - VITE_CHATBOT_API_URL=${CHATBOT_URL:-http://localhost:5000/api}
    stdin_open: true
    tty: true
    command: ["npm", "run", "dev", "--", "--host"]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ${REGISTRY:-local}/web-wizards-backend:${TAG:-dev}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      # These are used as fallbacks if .env.development doesn't exist
      - DATABASE_HOST=db
      - DATABASE_NAME=webwizardsdb
      - DATABASE_USER=webwizard
      - DATABASE_PASSWORD=password
      - SECRET_KEY=django-insecure-development-key-for-local-use-only
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1

  chatbot:
    build:
      context: ./chatbot
      dockerfile: Dockerfile
    image: ${REGISTRY:-local}/web-wizards-chatbot:${TAG:-dev}
    ports:
      - "5000:5000"
    volumes:
      - ./chatbot:/app
    environment:
      - FLASK_ENV=${ENVIRONMENT:-development}
      - PORT=5000
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpassword}
      - MYSQL_DATABASE=${DATABASE_NAME:-webwizardsdb}
      - MYSQL_USER=${DATABASE_USER:-webwizard}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD:-password}
    volumes:
      - db_data:/var/lib/mysql
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --performance-schema=OFF
      --max_connections=100
      --innodb_buffer_pool_size=134217728
      --connect_timeout=10
      --wait_timeout=180

volumes:
  db_data:
